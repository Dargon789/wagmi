# This workflow's name will appear on the GitHub Actions page.
name: Deploy to Vercel
permissions:
  contents: read

# This specifies when the workflow should run.
on:
  # The workflow will run on every 'push' to the 'main' branch.
  push:
    branches:
      - master
      - main
      - dev
  # This allows you to manually trigger the workflow from the GitHub Actions page.
  workflow_dispatch:

# These are environment variables passed to the Vercel CLI.
# They must be set as GitHub Secrets for security.
env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
  # Add any other environment variables your project needs here,
  # such as API keys for the Coinbase SDK.
  # Example: VITE_COINBASE_API_KEY: ${{ secrets.VITE_COINBASE_API_KEY }}

# Defines a job named 'deploy'.
jobs:
  deploy:
    # Specifies the runner environment for this job.
    runs-on: ubuntu-latest

    # The steps in the 'deploy' job.
    steps:
      # 1. Check out the project code from the repository.
      # This is the first essential step to get access to your code.
      - name: Checkout project code
        uses: actions/checkout@v3

      # 2. Set up Node.js.
      # The version should match the one in your project.
  steps:
    - uses: actions/setup-node@v4
    - name: Setup Node.js
    - uses: actions/setup-node@v4
      with:
      node-version: 18.x,20.x,22.x
  strategy:
      matrix:
      node-version: [18.x, 20.x, 22.x]
      steps:
      - uses: actions/setup-node@v4
  with:
      node-version: ${{ matrix.node-version }}
      
      # 3. Install the Vercel CLI.
      # The Vercel CLI is the main tool for interacting with the Vercel platform.
      with:
        node-version: 22.x
        name: Install Vercel CLI
        run: npm install --global vercel@latest

      # 4. Pull Vercel project settings.
      # This fetches Vercel project links and Org ID.
        with:  
         - name: Pull Vercel environment variables
      run: vercel pull --yes --environment=production
      env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}

      # 5. Build the project.
      # This command builds your project for a production environment.
      # It will automatically use the build command defined in your project's `package.json`.
          with:
          - name: Build project
            run: vercel build

      # 6. Deploy the project to Vercel.
      # This step deploys the pre-built code to Vercel.
strategy:
  matrix:
    node-version: [18.x, 20.x, 22.x]
    name: Deploy to Vercel
    run: vercel deploy --prebuilt
      env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
